"""
This type stub file was generated by pyright.
"""

import io
from fsspec.spec import AbstractFileSystem

logger = ...
FOLDER_MIME_TYPE = ...
COMMON_SETTINGS = ...
class GDriveAuthError(Exception):
    ...


class GDriveFileSystem(AbstractFileSystem):
    """Access to gdrive as an fsspec filesystem"""
    def __init__(self, path, google_auth=..., client_id=..., client_secret=..., client_user_email=..., client_json=..., client_json_file_path=..., use_service_account=..., profile=..., trash_only=..., acknowledge_abuse=..., **kwargs) -> None:
        """Create an instance of GDriveFileSystem.

        :param path: gdrive path.
        :type path: str.
        :param google_auth: Authenticated GoogleAuth instance.
        :type google_auth: GoogleAuth.
        :param client_id: Client ID of the application.
        :type client_id: str
        :param client_secret: Client secret of the application.
        :type client_secret: str.
        :param client_user_email: User email that authority was delegated to
            (only for service account).
        :type client_user_email: str.
        :param client_json: JSON keyfile loaded into a string.
        :type client_json: str.
        :param client_json_file_path: Path to JSON keyfile.
        :type client_json_file_path: str.
        :param use_service_account: Use service account.
        :type use_service_account: bool.
        :param profile: Profile name for caching credentials
            (ignored for service account).
        :param trash_only: Move files to trash instead of deleting.
        :type trash_only: bool.
        :param acknowledge_abuse: Acknowledging the risk and download file
            identified as abusive.
        :type acknowledge_abuse: bool
        :type profile: str.
        :raises: GDriveAuthError
        """
        ...
    
    def split_path(self, path): # -> tuple[Unknown, Literal['']]:
        ...
    
    def exists(self, path): # -> bool:
        ...
    
    @_gdrive_retry
    def info(self, path): # -> dict[str, str]:
        ...
    
    def ls(self, path, detail=...): # -> list[Unknown] | None:
        ...
    
    def find(self, path, detail=..., **kwargs): # -> dict[Unknown, Unknown] | list[Unknown]:
        ...
    
    def upload_fobj(self, stream, rpath, callback=..., **kwargs): # -> GoogleDriveFile:
        ...
    
    def put_file(self, lpath, rpath, callback=..., **kwargs): # -> None:
        ...
    
    def cp_file(self, lpath, rpath, **kwargs): # -> None:
        """In-memory streamed copy"""
        ...
    
    def get_file(self, lpath, rpath, callback=..., block_size=..., **kwargs): # -> None:
        ...
    
    def rm_file(self, path): # -> None:
        ...
    


class GDriveBufferedWriter(io.IOBase):
    def __init__(self, fs, path) -> None:
        ...
    
    def write(self, *args, **kwargs): # -> None:
        ...
    
    def readable(self): # -> Literal[False]:
        ...
    
    def writable(self): # -> Literal[True]:
        ...
    
    def flush(self): # -> None:
        ...
    
    def close(self): # -> None:
        ...
    
    def __enter__(self): # -> Self@GDriveBufferedWriter:
        ...
    
    def __exit__(self, *exc_info): # -> None:
        ...
    
    @property
    def closed(self): # -> bool:
        ...
    


